# Lib dependencies
MysqlAdapter = require('../lib/MysqlAdapter')

# Stub DB options used to configure connection
stubOptions = {
  host : '0.0.0.0'
  user : 'user'
  password : 'secret'
}

# Module testing
describe 'MysqlAdapter', ->

  describe '#new', ->
    adapter = undefined

    beforeEach ->
      spyOn(MysqlAdapter.prototype, 'configure')
      adapter = new MysqlAdapter()

    it 'should return a MysqlAdapter object', ->
      expect(adapter.constructor).toBe(MysqlAdapter)

    it 'should configure', ->
      expect(adapter.configure).toHaveBeenCalled()


  describe '#configure', ->
    adapter = undefined

    beforeEach ->
      adapter = new MysqlAdapter(stubOptions)

    it 'should set local config', ->
      expect(adapter.config).toBe(stubOptions)

    it 'should set a connection object', ->
      expect(adapter.connection).toBeDefined() # TODO: use a spy to determine if set

  describe '#open (while open)', ->
    it 'should return false', ->
  describe '#open (while unopened)', ->
    it 'should set open state', ->
    it 'should attempt to open connection', ->
    it 'should return true', ->
  describe '#close (while closed)', ->
    it 'should return false', ->
  describe '#close (while open)', ->
    it 'should set closed state', ->
    it 'should close the connection', ->
    it 'should return true', ->
  describe '#query', ->
    it 'should make query against connection', ->